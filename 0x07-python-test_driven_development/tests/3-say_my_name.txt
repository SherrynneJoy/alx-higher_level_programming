#3-say_my_name

=======================
Printing a name
=====================

This module defines a function that prints a name ``say_my_name(first_name, last_name="")``.

usage
=======

``say_my_name(...)`` prints a name with ``first_name`` and ``last_name`` being strings.

::

	>>>say_my_name = __import__('3-say_my_name').say_my_name
	>>>say_my_name("Sherrynne", "Joy")
	My name is Sherrynne Joy

::

The ``last_name`` is optional

::

	>>>say_my_name("Joy")
	My name is Joy

Invalid Names
==============

``first_name`` must be a string. Otherwise a TypeError is raised

::

	>>>say_my_name(9, "Joy")
	Traceback (most recent call last):
	TypeError: first_name must be a string

::

	>>>say_my_name(10.0, "Joy")
	Traceback (most recent call last):
	TypeError: first_name must be a string

::

	>>>say_my_name(None, "Joy")
	Traceback (most recent call last):
	TypeError: first_name must be a string

::

	>>>say_my_name(None)
	Traceback(most recent call last):
	TypeError: first_name must be a string

::

	>>>say_my_name({"Joy": 23, "Peace": 25}, "Jane")
	Traceback (most recent call last):
	TypeError: first_name must be a string

``last_name`` must be a string. Otherwise a TypeError is raised.

::

	>>>say_my_name("Joy", 0)
	Traceback (most recent call last):
	TypeError: last_name must be a string

::

	>>>say_my_name("Joy", 0.01)
	Traceback (most recent call last):
	TypeError: last_name must be a string

::

	>>>say_my_name("Joy", ["Jane, "Liv", "Peace"])
	Traceback (most recent call last):
	TypeError: last_name must be a string

At least one argument must be provided for the function.
If no argument is provided, the function will fail.

::

	>>>say_my_name()
	Traceback (most recent call last):
	TypeError: say_my_name() missing a first name
